import{html,render}from"../../../../lib/lit-extended.js";import{repeat}from"../../../../lib/repeat.js";class ZcuiWcDateTimePicker extends HTMLElement{static get observedAttributes(){return["max-date-time","min-date-time","interval-in-min"]}constructor(){super(),this.openMonthList=this.openYearList=this.openStartTimeList=this.openEndTimeList=!1,this.monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"],this.monthRangeVal=[0,1,2,3,4,5,6,7,8,9,10,11],this.yearRangeVal=[2018],this.calendarWeekDays=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],this.intervalInMin=30,this.timeRangeVal=Array.apply(null,{length:1440/this.intervalInMin}).map((t,e)=>{const i=Math.ceil((e+1)/2)%24;return e%2==0?`${i}:00`:`${i}:30`}),this.disableNextMonth=this.disablePrevMonth=!1,this.updateShadowDom=this.updateShadowDom.bind(this),this.toggleOpenMonthList=this.toggleOpenMonthList.bind(this),this.toggleOpenYearList=this.toggleOpenYearList.bind(this),this.toggleOpenStartTimeList=this.toggleOpenStartTimeList.bind(this),this.toggleOpenEndTimeList=this.toggleOpenYearList.bind(this),this._flipPage=this._flipPage.bind(this),this.setNextMonth=this.setNextMonth.bind(this),this.setPrevMonth=this.setPrevMonth.bind(this),this._updateMonthRange=this._updateMonthRange.bind(this),this.closeDropDowns=this.closeDropDowns.bind(this),this._checkDisabledNextPrevArrow=this._checkDisabledNextPrevArrow.bind(this),this.startDate=new Date,this.selectedMonth=this.startDate.getMonth(),this.selectedYear=this.startDate.getFullYear(),this.endDate=null}get htmlTemplate(){return html`
      <style>
        .zcui-wc-date-time-picker{padding:20px;border:solid 1px #cecece;box-shadow:5px 5px 50px 2px #cecece;border-radius:5px;margin:auto;width:fit-content}.zcui-wc-date-time-picker .d-f{display:flex}.zcui-wc-date-time-picker .fd-c{flex-direction:column}.zcui-wc-date-time-picker .jc-c{justify-content:center}.zcui-wc-date-time-picker .ai-c{align-items:center}.zcui-wc-date-time-picker .flip-month-page{justify-content:space-around}.zcui-wc-date-time-picker .flip-month-page .left-arrow{border-left:solid 1.5px #6b46bc;border-bottom:solid 1.5px #6b46bc;margin-right:10px;cursor:pointer}.zcui-wc-date-time-picker .flip-month-page .right-arrow{border-right:solid 1.5px #6b46bc;border-top:solid 1.5px #6b46bc;margin-left:10px;cursor:pointer}.zcui-wc-date-time-picker .flip-month-page .arrow{height:12px;width:12px;transform:rotate(45deg)}.zcui-wc-date-time-picker .flip-month-page .arrow.disabled{pointer-events:none;border-color:#cecece}.zcui-wc-date-time-picker .change-month,.zcui-wc-date-time-picker .change-year,.zcui-wc-date-time-picker .change-time{position:relative;cursor:pointer;border:solid 2px #e5e8e9bf;border-radius:5px;padding:5px 10px;margin:0 7px}.zcui-wc-date-time-picker .change-month .down-arrow,.zcui-wc-date-time-picker .change-year .down-arrow,.zcui-wc-date-time-picker .change-time .down-arrow{margin-top:2px;height:8px;width:8px;transform:rotate(45deg);border-right:solid 1.5px #6b46bc;border-bottom:solid 1.5px #6b46bc;margin-left:10px}.zcui-wc-date-time-picker .change-month .month-list,.zcui-wc-date-time-picker .change-month .year-list,.zcui-wc-date-time-picker .change-month .time-list,.zcui-wc-date-time-picker .change-year .month-list,.zcui-wc-date-time-picker .change-year .year-list,.zcui-wc-date-time-picker .change-year .time-list,.zcui-wc-date-time-picker .change-time .month-list,.zcui-wc-date-time-picker .change-time .year-list,.zcui-wc-date-time-picker .change-time .time-list{position:absolute;top:29px;left:0;height:100px;right:0;border:solid 1px #e5e8e9bf;border-top:none;overflow:scroll;padding-top:5px;background:#fff}.zcui-wc-date-time-picker .change-month .month-list span,.zcui-wc-date-time-picker .change-month .year-list span,.zcui-wc-date-time-picker .change-month .time-list span,.zcui-wc-date-time-picker .change-year .month-list span,.zcui-wc-date-time-picker .change-year .year-list span,.zcui-wc-date-time-picker .change-year .time-list span,.zcui-wc-date-time-picker .change-time .month-list span,.zcui-wc-date-time-picker .change-time .year-list span,.zcui-wc-date-time-picker .change-time .time-list span{box-sizing:border-box;padding:5px 10px;width:100%;text-align:left}.zcui-wc-date-time-picker .change-month .month-list span:hover,.zcui-wc-date-time-picker .change-month .year-list span:hover,.zcui-wc-date-time-picker .change-month .time-list span:hover,.zcui-wc-date-time-picker .change-year .month-list span:hover,.zcui-wc-date-time-picker .change-year .year-list span:hover,.zcui-wc-date-time-picker .change-year .time-list span:hover,.zcui-wc-date-time-picker .change-time .month-list span:hover,.zcui-wc-date-time-picker .change-time .year-list span:hover,.zcui-wc-date-time-picker .change-time .time-list span:hover{background:#6b46bc;color:#fff}.zcui-wc-date-time-picker .change-month .month,.zcui-wc-date-time-picker .change-year .month,.zcui-wc-date-time-picker .change-time .month{width:70px}.zcui-wc-date-time-picker .hide{display:none}.zcui-wc-date-time-picker .calendar{font-size:14px;width:288px;color:#94979b}.zcui-wc-date-time-picker .calendar .day-name{padding-top:10px}.zcui-wc-date-time-picker .calendar .dates{padding:10px 0}.zcui-wc-date-time-picker .calendar .dates .date-cell{cursor:pointer;border-radius:50%}.zcui-wc-date-time-picker .calendar .dates .date-cell.selected{background:#6b46bc;color:#fff}.zcui-wc-date-time-picker .divider{border-bottom:solid 1.5px #e5e8e9bf}.zcui-wc-date-time-picker .date-cell{display:inline-block;width:38px;text-align:center;padding:10px 0}.zcui-wc-date-time-picker .summary{padding:20px 0}.zcui-wc-date-time-picker .summary .date{width:40px;text-align:right;font-size:40px;padding:0 6px;color:#6b46bc}.zcui-wc-date-time-picker .summary .title{color:#94979b;font-size:12px}.zcui-wc-date-time-picker .summary .selected-day-name{color:#94979b}.zcui-wc-date-time-picker .summary .time-circle{height:20px;width:20px;border:solid 1px #6b46bc;border-radius:50%;margin-left:16px;margin-right:4px}.zcui-wc-date-time-picker .summary .time-circle::after{content:'';display:block;height:8px;width:5px;border-left:solid 1px #6b46bc;border-bottom:solid 1px #6b46bc;margin:4px 0 0 8px}

      </style>
      <div class="zcui-wc-date-time-picker d-f" on-click=${this.closeDropDowns}>
  <div class="flip-month-page d-f ai-c">
    <span
      on-click="${this.setPrevMonth}"
      class$="${this.disablePrevMonth?"arrow left-arrow disabled":"arrow left-arrow"}">
    </span>
    <span class="change-month d-f">
      <div class="d-f" on-click=${this.toggleOpenMonthList}>
        <span class="month name">${this.monthNames[this.selectedMonth]}</span>
        <div class="down-arrow"></div>
      </div>
      <div
        class$="${this.openMonthList?"month-list d-f ai-c fd-c":"hide"}">
        ${repeat(this.monthRangeVal,t=>html`
          <span on-click=${this.selectMonth(t)}>${this.monthNames[t]}</span>
        `)}
      </div>
    </span>
    <span class="change-year d-f">
      <div class="d-f" on-click=${this.toggleOpenYearList}>
        <span class="year-name">${this.selectedYear}</span>
        <div class="down-arrow"></div>
      </div>
      <div class$="${this.openYearList?"year-list d-f ai-c fd-c":"hide"}">
        ${repeat(this.yearRangeVal,t=>html`
          <span on-click=${this.selectYear(t)}>${t}</span>
        `)}
      </div>
    </span>
    <span
      on-click="${this.setNextMonth}"
      class$="${this.disableNextMonth?"arrow right-arrow disabled":"arrow right-arrow"}">
    </span>
  </div>
  <div class="calendar">
    <div class="day-name">
      <span class="date-cell">SU</span>
      <span class="date-cell">MO</span>
      <span class="date-cell">TU</span>
      <span class="date-cell">WE</span>
      <span class="date-cell">TH</span>
      <span class="date-cell">FR</span>
      <span class="date-cell">SA</span>
    </div>
    <div class="divider"></div>
    <!-- (this.endDateOfCalendar-this.startDateOfCalendar+1) will give total dates 
    startDateOfCalendar starts with -ve val or 1 startDateOfCalendar is starts with sunday -->

    <div class="dates">
      ${repeat(Array(this.endDateOfCalendar-this.startDateOfCalendar+1).fill(),(t,e)=>html`
        <span
          on-click=${this.selectDate(this.startDateOfCalendar+e)}
          class$="${this.getSelectedDate(this.startDateOfCalendar+e)&&this.getStartDate().getTime()==this.getSelectedDate(this.startDateOfCalendar+e).getTime()?"selected date-cell":"date-cell"}">
          ${this.startDateOfCalendar+e>0?this.startDateOfCalendar+e:""}
        </span>
      `)}
    </div>
  </div>
  <div class="divider"></div>
  <div class="summary">
    <div>
      <div class="title">FROM</div>
      <div class="d-f ai-c">
        <div class="date">${this.startDate.getDate()}</div>
        <div class="d-f fd-c jc-c">
          <div>
            <span class="month">${this.monthNames[this.startDate.getMonth()]}</span>
            <span class="year">${this.startDate.getFullYear()}</span>
          </div>
          <div class="selected-day-name">${this.calendarWeekDays[this.startDate.getDay()]}</div>
        </div>
        <div class="time-circle"></div>
        <span class="change-time d-f">
          <div class="d-f" on-click=${this.toggleOpenStartTimeList}>
            <span class="time-name">${this.startDate.getHours()}:${this.startDate.getMinutes()}</span>
            <div class="down-arrow"></div>
          </div>
          <div class$="${this.openStartTimeList?"time-list d-f ai-c fd-c":"hide"}">
            ${repeat(this.timeRangeVal,t=>html`
            <span on-click=${this.selectStartTime(t)}>${t}</span>
            `)}
          </div>
        </span>
      </div>
    </div>
  </div>
</div>
    `}createShadowDom(){this.attachShadow({mode:"open"}),this.updateShadowDom()}updateShadowDom(){this.shadowRoot&&render(this.htmlTemplate,this.shadowRoot)}attributeChangedCallback(t,e,i){e!=i&&(this.setProps(),this.updateShadowDom())}setProps(){this.maxDateTime=new Date(this.getAttribute("max-date-time")),this.minDateTime=new Date(this.getAttribute("min-date-time")),this.intervalInMin=parseInt(this.getAttribute("interval-in-min")),this._updateCalendarRange(),this._flipPage()}connectedCallback(){this.createShadowDom()}toggleOpenMonthList(){this.openMonthList=!this.openMonthList,this.updateShadowDom()}toggleOpenYearList(){this.openYearList=!this.openYearList,this.updateShadowDom()}toggleOpenStartTimeList(){this.openStartTimeList=!this.openStartTimeList,this.updateShadowDom()}toggleOpenEndTimeList(){this.openEndTimeList=!this.openEndTimeList,this.updateShadowDom()}selectMonth(t){return()=>{this.selectedMonth=t,this.openMonthList=!1,this._flipPage()}}selectYear(t){return()=>{this.selectedYear=t,this.openYearList=!1,this._updateMonthRange(),this._flipPage()}}selectDate(t){return()=>{t>0&&(this.startDate.setDate(t),this.startDate.setMonth(this.selectedMonth),this.startDate.setYear(this.selectedYear),this.updateShadowDom())}}selectStartTime(t){return()=>{console.log(t),this.openStartTimeList=!1,this.updateShadowDom()}}_updateCalendarRange(){const t=this.maxDateTime.getFullYear(),e=this.minDateTime.getFullYear();if(this.yearRangeVal=Array.apply(null,{length:t-e+1}).map((t,i)=>i+e),t-e<1){const t=this.maxDateTime.getMonth(),e=this.minDateTime.getMonth();this.monthRangeVal=Array.apply(null,{length:t-e+1}).map((t,i)=>i+e)}}setNextMonth(){this.selectedMonth++,12==this.selectedMonth&&(this.selectedMonth=0,this.selectedYear++),this._flipPage()}setPrevMonth(){this.selectedMonth--,-1==this.selectedMonth&&(this.selectedMonth=11,this.selectedYear--),this._flipPage()}_flipPage(){let t=new Date;t.setDate(1),t.setMonth(this.selectedMonth),t.setYear(this.selectedYear),this.startDateOfCalendar=1-t.getDay(),t.setMonth(this.startDate.getMonth()+1),t.setDate(0),this.endDateOfCalendar=t.getDate(),this._checkDisabledNextPrevArrow(),this._updateMonthRange(),this.updateShadowDom()}_updateMonthRange(){if(this.monthRangeVal=Array.apply(null,{length:12}).map((t,e)=>e),this.startDate.getFullYear()==this.minDateTime.getFullYear()){const t=this.minDateTime.getMonth();this.startDate.getMonth()<t&&this.startDate.setMonth(t),this.monthRangeVal=Array.apply(null,{length:11-t+1}).map((e,i)=>i+t)}if(this.startDate.getFullYear()==this.maxDateTime.getFullYear()){const t=this.maxDateTime.getMonth();this.startDate.getMonth()>t&&this.startDate.setMonth(t),this.monthRangeVal=Array.apply(null,{length:t+1}).map((t,e)=>e)}}closeDropDowns(){}_checkDisabledNextPrevArrow(){let t=new Date;t.setYear(this.startDate.getFullYear()),this.disableNextMonth=this.disablePrevMonth=!1,t.setDate(this.minDateTime.getDate()),new Date(t.setMonth(this.startDate.getMonth()-1))<this.minDateTime&&(this.disablePrevMonth=!0),t.setDate(this.maxDateTime.getDate()),new Date(t.setMonth(this.startDate.getMonth()+1))>this.maxDateTime&&(this.disableNextMonth=!0)}getSelectedDate(t){if(t>0){const e=new Date;return e.setDate(t),e.setMonth(this.selectedMonth),e.setYear(this.selectedYear),e.setHours(0,0,0,0),e}}getStartDate(){const t=new Date(this.startDate.getTime());return t.setHours(0,0,0,0),t}}window.customElements.define("zcui-wc-date-time-picker",ZcuiWcDateTimePicker);
